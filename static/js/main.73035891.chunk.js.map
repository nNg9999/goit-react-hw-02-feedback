{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js","components/Section/Section.module.scss"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","feedbacks","Object","keys","className","styles","wrapper","map","feedback","type","button","key","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","defaultProps","Section","title","children","section","Notification","message","Proptype","PropType","string","isRequired","node","App","state","leaveFeedback","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","totalValue","goodValue","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,yLC6BvDC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAYC,OAAOC,KAAKJ,GAE9B,OACE,yBAAKK,UAAWC,IAAOC,SACpBL,EAAUM,KAAI,SAACC,GAAD,OACb,4BAAQC,KAAK,SAASL,UAAWC,IAAOK,OAAQC,IAAKH,EAAUI,QAAS,kBAAMZ,EAAgBQ,KAC3FA,Q,gBCNX,SAASK,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAE/C,OACE,yBAAKd,UAAWC,IAAOc,YACrB,oCAAUL,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAKNL,EAAWO,aAAe,CACxBH,MAAO,EACPC,mBAAoB,GAWPL,Q,gCC3BA,SAASQ,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,6BAASnB,UAAWC,IAAOmB,SACxBF,GAAS,wBAAIlB,UAAWC,IAAOiB,OAAQA,GACvCC,GCLP,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,2BAAIA,GDSbL,EAAQM,SAAW,CACjBL,MAAOM,IAASC,OAAOC,WACvBP,SAAUK,IAASG,KAAKD,YCR1BL,EAAaL,aAAe,CAC1BM,QAAS,qBAOID,QCPMO,G,kNAEnBC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,cAAgB,SAACzB,GACf,EAAK0B,UAAS,SAAAC,GACZ,OAAO,eACJ3B,EAAO2B,EAAU3B,GAAQ,O,EAKhC4B,mBAAqB,kBAAMnC,OAAOoC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEzFC,gCAAkC,SAACC,EAAYC,GAAb,OAA2BC,KAAKC,MAAOF,EAAYD,EAAc,M,uDAEzF,IAAD,EACwBI,KAAKd,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ8B,KAAKV,qBACbnB,EAAqB6B,KAAKL,gCAAgCzB,EAAOH,GAEvE,OACE,oCACE,kBAACO,EAAD,CAASC,MAAM,yBACb,kBAAC,EAAD,CAAiBvB,QAASgD,KAAKd,MAAOjC,gBAAiB+C,KAAKb,iBAE9D,kBAACb,EAAD,CAASC,MAAM,cACZL,EAAQ,EACL,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IACtF,kBAAC,EAAD,CAAcI,MAAM,4B,GAjCD0B,cCJjCC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,U,kBCJrDxD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB","file":"static/js/main.73035891.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__3-9M_\",\"button\":\"FeedbackOptions_button__142rO\"};","import React from 'react';\nimport { number, func, shape } from 'prop-types';\n\nimport styles from \"./FeedbackOptions.module.scss\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const feedbacks = Object.keys(options);\n\n  return (\n    <div className={styles.wrapper}>\n      {feedbacks.map((feedback) => (\n        <button type=\"button\" className={styles.button} key={feedback} onClick={() => onLeaveFeedback(feedback)}>\n          {feedback}\n        </button>\n      ))}\n    </div>\n  );\n\n}\n\nFeedbackOptions.propTypes = {\n  options: shape({\n    good: number.isRequired,\n    neutral: number.isRequired,\n    bad: number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: func.isRequired,\n};\n\n\nexport default FeedbackOptions;\n\n","import React from 'react';\nimport { number } from 'prop-types';\n\nimport styles from './Statistics.module.scss';\n\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n\n  return (\n    <div className={styles.statistics}>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  )\n}\n\nStatistics.defaultProps = {\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: number.isRequired,\n  neutral: number.isRequired,\n  bad: number.isRequired,\n  total: number,\n  positivePercentage: number,\n};\n\nexport default Statistics;\n","import React from 'react';\n\nimport PropType from 'prop-types';\nimport styles from './Section.module.scss'\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>)\n};\n\n\nSection.Proptype = {\n  title: PropType.string.isRequired,\n  children: PropType.node.isRequired\n};\n","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport Notification from \"./Notification\";\n\n\nimport '../sass/base.scss';\n\nexport default class App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  leaveFeedback = (type) => {\n    this.setState(prevState => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    })\n  }\n\n  countTotalFeedback = () => Object.values(this.state).reduce((acc, value) => acc + value, 0)\n\n  countPositiveFeedbackPercentage = (totalValue, goodValue) => Math.round((goodValue / totalValue) * 100)\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total, good);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\" >\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.leaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0\n            ? <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\n            : <Notification title=\"No feedback given\" />\n          }\n        </Section>\n      </>\n    )\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__sfXQL\",\"title\":\"Section_title__24_Z1\"};"],"sourceRoot":""}